// Code generated by hero.
// source: http-file-upload-download/template/text.html
// DO NOT EDIT!
package template

import (
	"bytes"

	"github.com/shiyanhui/hero"
)

func PageText(sText string, buffer *bytes.Buffer) {
	buffer.WriteString(`<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <title></title>
    <link rel="shortcut icon" href="/asset/favicon.ico">
<!-- <link rel="shortcut icon" type="image/x-icon" href="/asset/favicon.ico"> -->
<!-- <link rel="shortcut icon" type="image/vnd.microsoft.icon" href="/asset/favicon.ico"> -->
    <link rel="mask-icon" color="black" href="/asset/miao.svg">
    <link rel="apple-touch-icon" href="/asset/miao.png">
    <link rel="Bookmark" href="/asset/miao.png" />

    <script src="/asset/vue.min.js"></script>
    <link rel="stylesheet" href="/asset/element-ui/lib/theme-chalk/index.css">
    <script src="/asset/element-ui/lib/index.js"></script>
</head>
<body>
`)

	activeIndex := 3

	buffer.WriteString(`<div id="mushroom-nav">
    <el-menu :default-active="activeIndex" class="el-menu-demo" mode="horizontal" @select="handleSelect">
        <el-menu-item index="1"><i class="el-icon-document"></i></el-menu-item>
        <el-menu-item index="2"><i class="el-icon-document-add"></i></el-menu-item>
        <el-menu-item index="3"><i class="el-icon-edit-outline"></i></el-menu-item>
        <el-menu-item index="4" disabled><i class="el-icon-picture-outline"></i></el-menu-item>
    </el-menu>
</div>

<script>
    "use strict";
    let urlMap = {};
    urlMap['1'] = '/mushroom/';
    urlMap['2'] = '/up';
    urlMap['3'] = '/text';

    let extData = {
        data() {
            return {
                activeIndex: '`)
	hero.FormatInt(int64(activeIndex), buffer)
	buffer.WriteString(`',
            };
        },
        methods: {
            handleSelect(key, keyPath) {
                console.log(key, keyPath);
                if (urlMap.hasOwnProperty(key)) {
                    console.log(urlMap[key]);
                    window.location.href = urlMap[key];
                }
            }
        }
    };
    let navMenuCtor = Vue.extend(extData);
    new navMenuCtor().$mount('#mushroom-nav');
</script>`)
	buffer.WriteString(`
<br />
`)
	buffer.WriteString(`<div id="mushroom-text">
    <el-input
            type="textarea"
            :rows="32"
            @change="handleTextChange"
            placeholder="Please input"
            v-model="mrText">
    </el-input>
</div>

<script>
    "use strict";
    let mrText = '`)
	buffer.WriteString(sText)
	buffer.WriteString(`';
    let textExtData = {
        data() {
            return {
                mrText,
            }
        },
        methods: {
            handleTextChange() {
                // console.log("文本发生了改变"+"["+this.mrText+"]");
                let request = new XMLHttpRequest();
                request.open("POST", location.href);
                request.send(this.mrText);
            },
        },
    };
    let textCtor = Vue.extend(textExtData);
    new textCtor().$mount('#mushroom-text');
    document.getElementsByTagName("title")[0].innerText = "⌨️";
</script>`)
	buffer.WriteString(`</body>
</html>`)

}
